//loading init program
load(25,21) ;
load(26,22) ;
load(27,23) ;


//loading int7 and exhandler 
load(23 ,17) ;
load(24 ,18) ;
load(7 ,1) ;
load(8 ,2) ;


//loading int1
load (11, 5);
load (12, 6);

//loading timer interrupt
load (9, 3);
load (10, 4); 

 
[READY_LIST+0] = 0 ;//PID IS SET TO BE ZER0 

PTBR = PAGE_TABLE ; //AS PID IS ZERO 
PTLR = 4 ;
 
[PTBR+0] =  25 ;
[PTBR+1] = "01" ;

[PTBR+2] =  26 ;
[PTBR+3] = "01" ;
 
[PTBR+4] =  27 ;
[PTBR+5] = "01" ;

[PTBR+6] =  28 ;
[PTBR+7] = "01" ;

[READY_LIST+1] = 2  ; //SETTING THE STATE TO BE IN RUNNING STATE 

//setting the stack pointer 
SP  = 3*512 ;

// where to set the base pointer 

//setting the top of the stack to be 0 as ip will get this and the stack of init prog is at block 28
[28*512] = 0 ;

//****************************************************************************************************
//setting the structures of process 2

[READY_LIST + 32] = 1; // Sets the entry for PID as 1 for the second process

load(29,25 ); //from check with fat the basic block to actual page which contains data of one page only

//setting page table

alias PTBR_Process1 S0;
PTBR_Process1 = 1024 + 1 * 8; 

// Setting up page table for 2nd process

[PTBR_Process1 + 0] = 29; // Physical Page Number for Logical Page 0
[PTBR_Process1 + 1] = "01"; // Not referenced and Valid

[PTBR_Process1 + 2] = -1; // Invalid Page Number for Logical Page 1
[PTBR_Process1 + 3] = "00"; // Not referenced and Not Valid

[PTBR_Process1 + 4] = -1; // Invalid Page Number for Logical Page 2
[PTBR_Process1 + 5] = "00"; // Not referenced and Not Valid

[PTBR_Process1 + 6] = 30; // Physical Page Number for Logical Page 3 for stack
[PTBR_Process1 + 7] = "01"; // Not referenced and Valid

[READY_LIST + 33] = 1; // STATE is READY 
[READY_LIST + 37] = PTBR_Process1; // PTBR
[READY_LIST + 38] = 4; // PTLR 
[READY_LIST + 34] = 3 * 512; // Sets the entry for BP in the PCB
[READY_LIST + 35] = 3 * 512; // Sets the entry for SP in the PCB 
[READY_LIST + 36] = 0; // Sets the entry for IP to logical address 0 in the PCB 



breakpoint ;


ireturn ;

































 
